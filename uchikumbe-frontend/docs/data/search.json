{"list":[{"title":"AddFarm","link":"<a href=\"AddFarm.html\">AddFarm</a>","description":"<p>The AddFarm component represents the page for adding farm information.</p>"},{"title":"AdminDashboard","link":"<a href=\"AdminDashboard.html\">AdminDashboard</a>","description":"<p>The AdminDashboard component represents the dashboard page for the admin.\nIt displays tabs for managing forum creation requests and users.</p>"},{"title":"AdminDashboard~data","link":"<a href=\"AdminDashboard.html#~data\">data</a>","description":"<p>An array of tab data objects.</p>"},{"title":"AdminDashboard~manageForumCreationRequest","link":"<a href=\"AdminDashboard.html#~manageForumCreationRequest\">manageForumCreationRequest</a>","description":"<p>The ManageForumCreationRequestPage component.</p>"},{"title":"AdminDashboard~manageUser","link":"<a href=\"AdminDashboard.html#~manageUser\">manageUser</a>","description":"<p>The ManageUserPage component.</p>"},{"title":"CommentPage","link":"<a href=\"CommentPage.html\">CommentPage</a>","description":"<p>The above code is a React component called <code>CommentPage</code>. It is responsible for rendering a page\nthat displays a post and its comments.</p>"},{"title":"CommentPage~addComment","link":"<a href=\"CommentPage.html#~addComment\">addComment</a>","description":"<p>The function <code>addComment</code> adds a comment to a post in a subforum, updating the subforum's post\narray and fetching the updated post data.</p>"},{"title":"CommentPage~fetchPostData","link":"<a href=\"CommentPage.html#~fetchPostData\">fetchPostData</a>","description":"<p>The function fetches post data from a forum using a query and sets the post state with the fetched\ndata.</p>"},{"title":"CommentPage~userInfo","link":"<a href=\"CommentPage.html#~userInfo\">userInfo</a>","description":"<p>State variable for storing the user details.</p>"},{"title":"CreateForumFromUserRequestPage","link":"<a href=\"CreateForumFromUserRequestPage.html\">CreateForumFromUserRequestPage</a>","description":"<p>Represents the CreateForumFromUserRequestPage component.\nRenders a form to create a user forum request.</p>"},{"title":"CreateForumFromUserRequestPage~navigate","link":"<a href=\"CreateForumFromUserRequestPage.html#~navigate\">navigate</a>","description":"<p>Navigates to the forum page after submitting the forum request.</p>"},{"title":"CreateForumFromUserRequestPage~submitForumRequest","link":"<a href=\"CreateForumFromUserRequestPage.html#~submitForumRequest\">submitForumRequest</a>","description":"<p>Creates a new forum request and navigates to the forum page.</p>"},{"title":"CreatePost","link":"<a href=\"CreatePost.html\">CreatePost</a>","description":"<p>Component for creating a new post in a forum.\nRenders a form with fields for the post title, content, and optional image upload.\nOn submit, creates a new post with the provided data and redirects to the forum page.\nIf the user is not a member of the forum, displays a blocked page.</p>"},{"title":"CreatePost~createPost","link":"<a href=\"CreatePost.html#~createPost\">createPost</a>","description":"<p>Creates a new post with the provided data.\nIf an image was uploaded, includes it in the post object.\nCommits the new post to theSanity database using the <code>client.patch</code> method.\nNavigates to the forum page after successful creation of the post.\nIf the title or content fields are empty, displays a validation message for 2 seconds.</p>"},{"title":"CreatePost~isMember","link":"<a href=\"CreatePost.html#~isMember\">isMember</a>","description":"<p>Checks if the user is a member of the forum.</p>"},{"title":"CreatePost~navigate","link":"<a href=\"CreatePost.html#~navigate\">navigate</a>","description":"<p>Navigation function provided by the <code>react-router-dom</code> library.</p>"},{"title":"CreatePost~uploadImage","link":"<a href=\"CreatePost.html#~uploadImage\">uploadImage</a>","description":"<p>Uploads the selected image file to the server.\nSets the <code>imageAsset</code> state variable with the uploaded document.\nSets the <code>loading</code> state variable during the upload process.\nSets the <code>wrongImageType</code> state variable if the selected file has an unsupported type.</p>"},{"title":"CreatePost~user","link":"<a href=\"CreatePost.html#~user\">user</a>","description":"<p>Retrieves the user object from the <code>UserContext</code>.</p>"},{"title":"EditProfile","link":"<a href=\"EditProfile.html\">EditProfile</a>","description":"<p>The EditProfile component represents the page for editing user profile information.</p>"},{"title":"Forum","link":"<a href=\"Forum.html\">Forum</a>","description":"<p>The Forum component represents the forum page.\nRenders the forums created by the user and available forums to join.</p>"},{"title":"ForumPage","link":"<a href=\"ForumPage.html\">ForumPage</a>","description":"<p>The ForumPage component represents the forum page.\nRenders the forum details, including the forum title, description, and posts.\nAllows users to join the forum and create new posts if they are a member.</p>"},{"title":"ForumPage.fetchForumDetails","link":"<a href=\"ForumPage.html#.fetchForumDetails\">fetchForumDetails</a>","description":"<p>Fetches the forum details based on the <code>forumId</code>.\nUpdates the <code>forum</code> state variable with the fetched data.</p>"},{"title":"ForumPage.fetchUserData","link":"<a href=\"ForumPage.html#.fetchUserData\">fetchUserData</a>","description":"<p>Fetches the user data based on the user ID.\nUpdates the <code>user</code> state variable with the fetched data.</p>"},{"title":"ForumPage.isMember","link":"<a href=\"ForumPage.html#.isMember\">isMember</a>","description":"<p>Checks if the user is a member of the forum.</p>"},{"title":"ForumPage~joinForum","link":"<a href=\"ForumPage.html#~joinForum\">joinForum</a>","description":"<p>Joins the forum by updating the <code>memberOf</code> array with the user's details.\nReloads the page after joining the forum.</p>"},{"title":"ForumPage~userInfo","link":"<a href=\"ForumPage.html#~userInfo\">userInfo</a>","description":"<p>State variable for storing the user details.</p>"},{"title":"Forum~joinForum","link":"<a href=\"Forum.html#~joinForum\">joinForum</a>","description":"<p>Joins a forum by updating the <code>memberOf</code> array with the user's details.\nReloads the page after joining the forum.</p>"},{"title":"Header~signInSignUp","link":"<a href=\"Header.html#~signInSignUp\">signInSignUp</a>","description":"<p>The <code>signInSignUp</code> variable is a JSX element that represents a sign-in/sign-up component. It\nincludes a <code>Popover</code> component from the <code>@material-tailwind/react</code> library, which displays a\npopover when clicked. Inside the popover, there is a <code>Button</code> component with the text &quot;Sign In&quot;\nand an icon. When the button is clicked, it triggers the <code>SignUp</code> component, which is rendered\ninside the <code>PopoverContent</code>. This component allows users to sign in or sign up for an account.*</p>"},{"title":"Home","link":"<a href=\"Home.html\">Home</a>","description":"<p>The Home component represents the home page of the website.\nIt displays posts from different subforums in a masonry layout.</p>"},{"title":"ManageForumCreationRequestPage","link":"<a href=\"ManageForumCreationRequestPage.html\">ManageForumCreationRequestPage</a>","description":"<p>The code is defining a functional component called <code>ManageForumCreationRequestPage</code>. This component\nis responsible for managing and displaying forum creation requests.</p>"},{"title":"ManageForumCreationRequestPage~handleApprove","link":"<a href=\"ManageForumCreationRequestPage.html#~handleApprove\">handleApprove</a>","description":"<p>The <code>handleApprove</code> function approves a forum request by updating the <code>isApproved</code> property of the\nforum, creating a new subforum document, and handling any errors that occur.</p>"},{"title":"ManageForumCreationRequestPage~handleDeny","link":"<a href=\"ManageForumCreationRequestPage.html#~handleDeny\">handleDeny</a>","description":"<p>The function <code>handleDeny</code> is used to deny a forum request by setting the <code>isApproved</code> property to\n<code>false</code> for the specified forum ID.</p>"},{"title":"News~urlFor","link":"<a href=\"News.html#~urlFor\">urlFor</a>","description":"<p>Returns the URL for the news article's image.</p>"},{"title":"NotFoundPage","link":"<a href=\"global.html#NotFoundPage\">NotFoundPage</a>","description":"<p>The NotFoundPage function returns a React component that displays a &quot;Page Not Found&quot; message with an\nimage and a description.</p>"},{"title":"PageBlocked","link":"<a href=\"global.html#PageBlocked\">PageBlocked</a>","description":"<p>The PageBlocked function returns a React component that displays a message indicating that the page\ndoes not exist.</p>"},{"title":"People","link":"<a href=\"People.html\">People</a>","description":"<p>The People component represents a page that displays a list of users.\nIt fetches the user list from the server and renders each user as a Person card.</p>"},{"title":"SubmiteForumRequestPage","link":"<a href=\"SubmiteForumRequestPage.html\">SubmiteForumRequestPage</a>","description":"<p>The SubmiteForumRequestPage component represents the page for submitting a forum creation request.\nUsers can enter the desired forum name and a brief description to submit their request.\nUpon submission, the request is saved to the database.</p>"},{"title":"SubmiteForumRequestPage~submitForumRequest","link":"<a href=\"SubmiteForumRequestPage.html#~submitForumRequest\">submitForumRequest</a>","description":"<p>Submits the forum creation request by creating a new document in the database.\nThe request includes the provided title, description, and user ID.\nUpon successful submission, the user is navigated to the forum page.</p>"},{"title":"UserProfile","link":"<a href=\"UserProfile.html\">UserProfile</a>","description":"<p>The UserProfile component represents a user's profile page.\nIt displays the user's information, including bio, location, and profile picture.\nThe component also provides options for editing profile, adding a farm, viewing posts, and accessing admin dashboard (if user is an admin).</p>"},{"title":"commentCountQuery","link":"<a href=\"global.html#commentCountQuery\">commentCountQuery</a>","description":"<p>Generate a Sanity query to count the number of comments for a post.</p>"},{"title":"createOrGetUser","link":"<a href=\"global.html#createOrGetUser\">createOrGetUser</a>","description":"<p>Create or get a user based on the provided response.</p>"},{"title":"fetchUser","link":"<a href=\"global.html#fetchUser\">fetchUser</a>","description":"<p>Fetch the user information from the local storage.</p>"},{"title":"forumDetailsQuery","link":"<a href=\"global.html#forumDetailsQuery\">forumDetailsQuery</a>","description":"<p>Generate a Sanity query to fetch detailed information about a subforum.</p>"},{"title":"forumQuery","link":"<a href=\"global.html#forumQuery\">forumQuery</a>","description":"<p>The query to fetch a list of all subforums.</p>"},{"title":"mainNewsListQuery","link":"<a href=\"global.html#mainNewsListQuery\">mainNewsListQuery</a>","description":"<p>The query to fetch a list of main news items.</p>"},{"title":"messageListQuery","link":"<a href=\"global.html#messageListQuery\">messageListQuery</a>","description":"<p>Generate a Sanity query to fetch a list of messages between two users.</p>"},{"title":"module.exports","link":"<a href=\"module.html#.exports\">exports</a>","description":"<p>The above code is creating a navigation bar component using React and JavaScript. It includes a\nlogo, search functionality, and various navigation links. It also includes a responsive menu icon\nthat opens a drawer with additional navigation options when clicked. The navigation bar is styled\nusing Tailwind CSS classes.</p>"},{"title":"module.exports","link":"<a href=\"module.html#.exports\">exports</a>","description":"<p>The News component displays a list of news articles.</p>"},{"title":"postDetailQuery","link":"<a href=\"global.html#postDetailQuery\">postDetailQuery</a>","description":"<p>Generate a Sanity query to fetch detailed information about a post.</p>"},{"title":"postDetailQueryFromForum","link":"<a href=\"global.html#postDetailQueryFromForum\">postDetailQueryFromForum</a>","description":"<p>Generate a Sanity query to fetch detailed information about a post in a subforum.</p>"},{"title":"postQueryforums","link":"<a href=\"global.html#postQueryforums\">postQueryforums</a>","description":"<p>The query to fetch a list of subforums with their associated posts.</p>"},{"title":"postsQuery","link":"<a href=\"global.html#postsQuery\">postsQuery</a>","description":"<p>The query to fetch a list of all posts.</p>"},{"title":"router","link":"<a href=\"global.html#router\">router</a>","description":"<p>The code sets up a router for a React application with various routes and components.</p>"},{"title":"submitForumRequestQuery","link":"<a href=\"global.html#submitForumRequestQuery\">submitForumRequestQuery</a>","description":"<p>The query to fetch a list of forum requests.</p>"},{"title":"urlFor","link":"<a href=\"global.html#urlFor\">urlFor</a>","description":"<p>Generate a URL for an image from the Sanity backend.</p>"},{"title":"userCreatedForumsQuery","link":"<a href=\"global.html#userCreatedForumsQuery\">userCreatedForumsQuery</a>","description":"<p>Generate a Sanity query to fetch a list of subforums created by a user.</p>"},{"title":"userDetailQuery","link":"<a href=\"global.html#userDetailQuery\">userDetailQuery</a>","description":"<p>Generate a Sanity query to fetch detailed information about a user based on their ID.</p>"},{"title":"userListQuery","link":"<a href=\"global.html#userListQuery\">userListQuery</a>","description":"<p>The query to fetch a list of users.</p>"},{"title":"userQuery","link":"<a href=\"global.html#userQuery\">userQuery</a>","description":"<p>Generate a Sanity query to fetch a user based on their ID.</p>"}]}